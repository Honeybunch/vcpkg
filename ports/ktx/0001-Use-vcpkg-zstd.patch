diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8f46353b..36d39750 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -377,7 +377,7 @@ set(KTX_MAIN_SRC
     external/basisu/transcoder/basisu_transcoder.cpp
     external/basisu/transcoder/basisu_transcoder.h
     external/basisu/transcoder/basisu.h
-    external/basisu/zstd/zstd.c
+    #external/basisu/zstd/zstd.c
     lib/checkheader.c
     external/dfdutils/createdfd.c
     external/dfdutils/colourspaces.c
@@ -580,7 +580,7 @@ macro(common_libktx_settings target enable_write library_type)
         external
 
         $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/external/basisu/zstd>
-        $<INSTALL_INTERFACE:external/basisu/zstd>
+        #$<INSTALL_INTERFACE:external/basisu/zstd>
 
         $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/utils>
         $<INSTALL_INTERFACE:utils>
@@ -699,6 +699,11 @@ macro(common_libktx_settings target enable_write library_type)
         target_compile_definitions(${target} PUBLIC KTX_FEATURE_KTX2)
     endif()
 
+    # Use vcpkg zstd
+    find_package(zstd CONFIG REQUIRED)
+    set(ZSTD_LIBRARIES "$<IF:$<TARGET_EXISTS:zstd::libzstd_shared>,zstd::libzstd_shared,zstd::libzstd_static>")
+    target_link_libraries(${target} PRIVATE ${ZSTD_LIBRARIES})
+
     if(WIN32)
         if(MINGW)
             # Check if the Threads package is provided; if using Mingw it MIGHT be
diff --git a/cmake/KtxConfig.cmake b/cmake/KtxConfig.cmake
index 6386ba2f..c932dd40 100644
--- a/cmake/KtxConfig.cmake
+++ b/cmake/KtxConfig.cmake
@@ -4,4 +4,8 @@
 # include(CMakeFindDependencyMacro)
 # find_dependency()
 
+include(CMakeFindDependencyMacro)
+find_dependency(Threads)
+find_dependency(zstd CONFIG)
+
 include("${CMAKE_CURRENT_LIST_DIR}/KtxTargets.cmake")
diff --git a/external/basisu/CMakeLists.txt b/external/basisu/CMakeLists.txt
index 492233ae..0ba6cccb 100644
--- a/external/basisu/CMakeLists.txt
+++ b/external/basisu/CMakeLists.txt
@@ -145,9 +145,9 @@ set(BASISU_SRC_LIST ${COMMON_SRC_LIST}
 	transcoder/basisu_transcoder.cpp
 	)
 
-if (ZSTD)
-	set(BASISU_SRC_LIST ${BASISU_SRC_LIST} zstd/zstd.c)
-endif()
+#if (ZSTD)
+#	set(BASISU_SRC_LIST ${BASISU_SRC_LIST} zstd/zstd.c)
+#endif()
 
 if (APPLE)
    set(BIN_DIRECTORY "bin_osx")
@@ -165,6 +165,10 @@ else()
 	target_compile_definitions(basisu PRIVATE BASISD_SUPPORT_KTX2_ZSTD=0)
 endif()
 
+if(ZSTD_LIBRARIES)
+    target_link_libraries(basisu ${ZSTD_LIBRARIES})
+endif()
+
 if (NOT MSVC)
 	# For Non-Windows builds, let cmake try and find the system OpenCL headers/libs for us.
 	if (OPENCL_FOUND)
diff --git a/external/basisu/webgl/encoder/CMakeLists.txt b/external/basisu/webgl/encoder/CMakeLists.txt
index 588d91b4..9633be54 100644
--- a/external/basisu/webgl/encoder/CMakeLists.txt
+++ b/external/basisu/webgl/encoder/CMakeLists.txt
@@ -34,9 +34,9 @@ if (EMSCRIPTEN)
   )
 
   if (KTX2_ZSTANDARD)
-  	set(SRC_LIST ${SRC_LIST}
-		../../zstd/zstd.c
-	)
+  #	set(SRC_LIST ${SRC_LIST}
+	#	../../zstd/zstd.c
+	#)
 	set(ZSTD_DEFINITION BASISD_SUPPORT_KTX2_ZSTD=1)
   else()
   	set(ZSTD_DEFINITION BASISD_SUPPORT_KTX2_ZSTD=0)
@@ -56,6 +56,10 @@ if (EMSCRIPTEN)
   
   target_include_directories(basis_encoder.js PRIVATE ../../transcoder)
 
+  if(ZSTD_LIBRARIES)
+      target_link_libraries(basis_encoder.js ${ZSTD_LIBRARIES})
+  endif()
+
   set_target_properties(basis_encoder.js PROPERTIES
       OUTPUT_NAME "basis_encoder"
       SUFFIX ".js"
diff --git a/external/basisu/webgl/transcoder/CMakeLists.txt b/external/basisu/webgl/transcoder/CMakeLists.txt
index 372653de..051f15db 100644
--- a/external/basisu/webgl/transcoder/CMakeLists.txt
+++ b/external/basisu/webgl/transcoder/CMakeLists.txt
@@ -28,9 +28,9 @@ if (EMSCRIPTEN)
   endif()
   
   if (KTX2_ZSTANDARD)
- 	set(SRC_LIST ${SRC_LIST}
-		../../zstd/zstddeclib.c
-	)
+ 	#set(SRC_LIST ${SRC_LIST}
+	#	../../zstd/zstddeclib.c
+	#)
 	set(ZSTD_DEFINITION BASISD_SUPPORT_KTX2_ZSTD=1)
   else()
   	set(ZSTD_DEFINITION BASISD_SUPPORT_KTX2_ZSTD=0)
@@ -45,6 +45,10 @@ if (EMSCRIPTEN)
   target_compile_options(basis_transcoder.js PRIVATE -O3 -fno-strict-aliasing)
   target_include_directories(basis_transcoder.js PRIVATE ../../transcoder)
 
+  if(ZSTD_LIBRARIES)
+    target_link_libraries(basis_transcoder.js ${ZSTD_LIBRARIES})
+  endif()
+
   set_target_properties(basis_transcoder.js PROPERTIES
       OUTPUT_NAME "basis_transcoder"
       SUFFIX ".js"
